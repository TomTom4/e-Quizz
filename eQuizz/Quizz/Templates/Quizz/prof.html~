{% extends "Quizz/main.html" %}

{% load quizz %}

{% block body %}

<div class="jumbotron">
  <div class="container">
    <p style="text-align:center">Salle n° {{code}} </p>
    <div id="qrcode"></div>

    <!-- il faudra remplir ici pour les options du prof!-->
    <div class = "col-lg-6">
      <form method ="post" action={% url 'Quizz.views.prof' %}>
        {% csrf_token %}
        <ul class="list-unstyled">
          <li>
            <input type ="text" id="comment" class="textfieldprof" name="commentaire" placeholder ="Votre commentaire ici"/>
          </li>
          <li>
            <button type ="submit" id="open" class="celprof" name="question_type" value = "open">Débuter une question ouverte</button>
          </li>
          <li>
            <button type ="submit" id="qcm" class="celprof" name="question_type" value ="qcm">Débuter un QCM</button>
          </li>
          <li>
            <button type ="submit" id="close" class="celprof"  name="question_type" value ="close">Terminer la session</button>
          </li>
        </ul>
      </form>
    </div>
    <!-- placer dans cette deuxieme div les charts -->
    <div class="col-lg-6">
		<div class="row">
			<form method ="post" action={% url 'Quizz.views.prof' %}>
       	 		{% csrf_token %}
       	 		<input type="hidden" id="qnumber" value="{{ question_number }}" name="qnumber"/>
				<div class="col-sm-offset-1 col-sm-1">
					<button type="submit" name="question_type" value="prec"><</button><!--Bouton pour naviguer dans les questions-->
				</div>
				<div class="col-sm-offset-1 col-sm-6">
					<p style="text-align:center;">Question n°{{ question_number }}</p>
				</div>
				<div class="col-sm-offset-1 col-sm-1">
					<button type="submit" name="question_type" value="next">></button> <!--Bouton pour naviguer dans les questions-->
				</form>
			</div>
		</div>
		<!--Ce qui suit est valable pour les QCM => on a un affichage IND2PENDANT du nombre de réponses données-->
		<div class="row">
			<div class="col-sm-offset-2 col-sm-1">
				<!--Lettre des réponses-->
				<p>Réponse</p>
				{% for index in compte_sorted %}
					<p>{{ index }}</p>
				{% endfor %}
				<!--Travail en cours-->
			</div>
			<div class="col-sm-offset-1 col-sm-6" style="text-align:right;">
				<!-- Nombre de réponses -->
				<p>Nombre de réponses</p>
				{% for index in compte_sorted %}
					<p>{{ compte|get_item:index }} ({{ pourc|get_item:index }}%)</p>
				{% endfor %}
				<!--Travail en cours-->
			</div>

		</div>

    </div>
  </div>
</div>

</div>
</div>

<div class="container">
  <h1>De la communication à double sens en cours avec e-Quizz !</h1>
  <p><canvas id="qcmchart" width="400" height="400"></canvas><canvas id="openchart" width="400" height="400"></canvas></p>
</div>

{% endblock %}

{% block scripts %}
{% load static %}
<script src="{% static 'qrcode/qrcode.min.js' %}"></script>
<script src="{% static 'js/chart.js' %}"></script>
<script src="{% static 'wordcloud2/src/wordcloud2.js %}"</script>

<script>
  window.page = "prof";
  window.code = {{code}};
  window.test = 0;

  new QRCode(
    document.getElementById("qrcode"),
    {
      text : "http://{{current_site.domain}}{% url 'Quizz.views.prof_refresh' code=code question_id=question_number %}/{{code}}",
      colorDark : "#000000",
      colorLight : "#EEE",
    }
  );

  var ctx = $("#qcmchart");
  window.qcmchart = new Chart(ctx, {
    type: 'bar',
    data: {
      labels: ["A", "B", "C", "D", "E", "F"],
      datasets: [{
        label: '# of Votes',
        //data: [12, 19, 3, 5, 2, 3]
        data: [0, 0, 0, 0, 0, 0]
      }]
    },
    options: {
      scales: {
        yAxes: [{
          ticks: {
            beginAtZero:true
          }
        }]
      }
    }
  });
  /*
  var options = {}
  
  options.list='{% for element, val in compte %}{{ val }} {{ element }}\n{% end for %}';
  options.gridsize=1;
  options.rotationRatio=0;
  options.weightFactor=1;
  window.openchart = WordChart(<<emplacement>>, <<options (c'est un objet)>>)
*/
  window.refresh_prof = function() {
    $.getJSON("/prof_refresh/" + window.code + "/" + $("#qnumber").val(), function(res) {
      if (res.qzero){
      	$("#qcmchart").addClass('hidden');
      	window.test=42;
      	console.log("yolo");
  	  }
      else if (res.error) {
        alert('Erreur : ' + res.error);
      }
      else if (res.question_type == "QCM" && res.reponses != "undefined") {
      	$("#qcmchart").removeClass('hidden');
      	$("#openchart").addClass('hidden');
        window.qcmchart.data.datasets[0].data = res.reponses;
        window.qcmchart.update();
      }
      else if (res.question_type == "Open" && res.reponses != "undefined") {
      	$("#openchart").removeClass('hidden');
      	$("#qcmchart").addClass('hidden');
      	

      setTimeout(window.refresh_prof, 2000);
    });
  };
  window.refresh_prof();
</script>
{% endblock %}
